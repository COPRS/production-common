kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.processing.namespace }}
  generation: 1
  labels:
    app: {{ .Release.Name }}
  annotations:
    deployment.kubernetes.io/revision: '1'
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  replicas: 1
  template:
    metadata:
      name: {{ .Release.Name }}
      labels:
        app: {{ .Release.Name }}
        type: {{ .Values.processing.namespace }}
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .Values.worker.label.key }}
                operator: In
                values:
                - {{ .Values.worker.label.value }}
      containers:
      - name: {{ .Release.Name }}-webdav
        image: {{ .Values.image.registry }}/{{ .Values.image.repository }}/{{ .Values.image.name }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        ports:
        - name: webdav
          protocol: TCP
          containerPort: 80
        - name: webdavtls
          protocol: TCP
          containerPort: 443        
        volumeMounts: 
        - name: webdavdatadir
          mountPath: {{ .Values.mock.webdav_path }}     
        env:
        - name: AUTH_TYPE
          value: "Basic"
        - name: SSL_CERT
          value: "selfsigned"          
        - name: USERNAME
          valueFrom:
            secretKeyRef:
              name: mock
              key: USERNAME
        - name: USERNAME
          valueFrom:
            secretKeyRef:
              name: mock
              key: PASSWORD       
        livenessProbe:
          tcpSocket:
            port: 443
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        securityContext:
          privileged: false
      initContainers:
      - name: init-dav
        image: busybox:1.35
        command: ['sh', '-c', "mkdir -p {{ .Values.mock.webdav_path }}/NOMINAL/{{ .Values.mock.webdav_station }}/{{ .Values.mock.webdav_mission }}A {{ .Values.mock.webdav_path }}/NOMINAL/{{ .Values.mock.webdav_station }}/{{ .Values.mock.webdav_mission }}B {{ .Values.mock.webdav_path }}/RETRANSFER/{{ .Values.mock.webdav_station }}/{{ .Values.mock.webdav_mission }}A {{ .Values.mock.webdav_path }}/RETRANSFER/{{ .Values.mock.webdav_station }}/{{ .Values.mock.webdav_mission }}B && touch /var/lib/dav/DavLock && chown -R www-data:www-data /var/lib/dav" ]
        volumeMounts: 
        - name: webdavdatadir
          mountPath: /var/lib/dav        
      imagePullSecrets:
      - name: {{ .Values.image.imagePullSecrets }}
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      subdomain: {{ .Release.Name }}-svc
      securityContext: {}
      schedulerName: default-scheduler
  serviceName: {{ .Release.Name }}-svc
  revisionHistoryLimit: 10
  volumeClaimTemplates:  
  - metadata:
      name: webdavdatadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        requests:
          storage: {{ default "500Gi" (default dict (default dict .Values.mockWebDav).cgs01).storageSize }}