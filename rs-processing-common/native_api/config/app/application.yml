spring:
  application:
    name: {{ .Values.service.name }}

# Logging
logging:
  config: {{ .Values.logConfig }}

# REST controller
server:
  port: {{ .Values.service.port }}

# Native API config
native-api:
  # major version (used as part of the API base path)
  major-version: v1
  # version (to communicate minor changes that are compatible with the major version)
  version: 1.0
  # configuration for internal interfacing to PRIP
  prip-protocol: {{ .Values.nativeapi.prip.protocol }}
  prip-host: {{ .Values.nativeapi.prip.host }}
  prip-port: {{ .Values.nativeapi.prip.port }}
  # configuration to create PRIP metadata and download links that are externaly accessible
  external-prip-protocol: {{ .Values.nativeapi.external.protocol }}
  external-prip-host: {{ .Values.nativeapi.external.host }}
  external-prip-port: {{ .Values.nativeapi.external.port }}
  # whether to include the attributes/values of the 'Attributes' collection of the PRIP response into the STAC response
  include-additional-attributes: true
  # default limit
  defaultLimit: {{ .Values.nativeapi.defaultLimit }}
  rootCatalogId: {{ .Values.nativeapi.rootCatalog.id }}
  rootCatalogTitle: {{ .Values.nativeapi.rootCatalog.title }}
  rootCatalogDescription: {{ .Values.nativeapi.rootCatalog.description }}
  hostname: {{ .Values.nativeapi.hostname }}
  collections:
{{- range $key, $val := .Values.nativeapi.collections }}
    {{ $key}}:
      title: {{ $val.title | quote }}
      description: {{ $val.description | quote }}
      license: {{ $val.license | quote }}
      catalog: {{ $val.catalog | quote }}
{{- end}}
   
  lutConfigs:
    "[ids={value}]":
      - "Id eq {value}"
    "[bbox={value}]":
      - "OData.CSC.Intersects(area=geography'SRID=4326;POLYGON(({value}))')"
    "[point={value}]": 
      - "OData.CSC.Intersects(area=geography'SRID=4326;POINT({value})')"
    "[line={value}]":
      - "Odata.CSC.Intersects(area=geography'SRID=4326;LINESTRING({value})')"
    "[productname={value}]": 
      - "contains(Name,'{value}')"
    "[collections={producttype}]":
      - "Attributes/OData.CSC.StringAttribute/any(att:att/Name eq 'productType' and att/OData.CSC.StringAttribute/Value eq '{producttype}')"
    "[cloudcover={min}/{max}]":
      - "Attributes/OData.CSC.DoubleAttribute/any(att:att/Name eq 'cloudCover' and att/OData.CSC.DoubleAttribute/Value gt {min})"
      - "Attributes/OData.CSC.DoubleAttribute/any(att:att/Name eq 'cloudCover' and att/OData.CSC.DoubleAttribute/Value lt {max})"
    "[datetime={start}/{stop}]": 
      - "ContentDate/Start gt {start}"
      - "ContentDate/End lt {stop}"
    "[publicationdate={start}/{stop}]":
      - "CreationDate gt {start}"
      - "CreationDate lt {stop}"  
    "[polarisation={value}]":
      - "Attributes/OData.CSC.DoubleAttribute/any(att:att/Name eq 'polarisationChannels' and att/OData.CSC.DoubleAttribute/Value eq {value}"