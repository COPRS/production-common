#TODO: figure out why I need this here and in bootstrap.yml
spring:
  main:
    # Disable spring boot banner
    banner-mode: "off"
  application:
    # Application name
    name: rs-core-metadata-catalog-search controller
    
# Logging
logging:
  # Log configuration file
  config: ${log4j_config:log/log4j2.yml}
    
# Elastic Search
elasticsearch:
  # Host of Elasticsearch cluster
  host: ${elastic_host}           
  # Port of Elasticsearch cluster                                
  port: ${elastic_port}   
  # Timeout in milliseconds of connection to the cluster                                        
  connect-timeout-ms: 2000                
  # Timeout in milliseconds of the socket to the cluster                        
  socket-timeout-ms: 10000                                        

# Process
process:
  manifest-filenames:                                            # filenames for manifest files by product extension
    sen3: xfdumanifest.xml
    isip: "<PRODUCTNAME>_iif.xml"
    safe: manifest.safe
  # Hostname                               
  hostname: ${HOSTNAME}                   
                           

# Metadata catalog worker   
worker:
  product-categories:
    auxiliary-files:
      # Regex pattern to identify relevant metadata (files)
      pattern-config: ^([0-9a-z][0-9a-z])([0-9a-z_])(_(OPER|TEST))?_(AMH_ERRMAT|AMV_ERRMAT|AM__ERRMAT|AUX_CAL|AUX_ICE|AUX_INS|AUX_OBMEMC|AUX_PP1|AUX_PP2|AUX_POEORB|AUX_PREORB|AUX_RESORB|AUX_SCS|AUX_WAV|AUX_WND|MPL_ORBPRE|MPL_ORBRES|MPL_ORBSCT|MSK_EW_SLC|MSK__LAND_|MSK_OCEAN_|MSK_OVRPAS)_\w{1,}\.(XML|EOF|SAFE)(/.*)?$
      # Local directory (must ende with '/') 
      local-directory: /data/local-catalog/auxiliary_files/      
    edrs-sessions:
      # Regex pattern to identify relevant metadata (files) 
      pattern-config: ^([0-9a-z_]+)/(ch[0|_]?[1-2]/)?(DCS_[0-9]{2}_([a-zA-Z0-9_]*)_ch([12])_(DSDB|DSIB).*\.(raw|aisp|xml))$
      # Local directory (must ende with '/') 
      local-directory: /data/local-catalog/edrs_sessions/ 
      # Regex pattern to match metadata
      path-pattern: ^([0-9a-z_]{4}/)?([0-9a-z_]{2})([0-9a-z_]{1})/([0-9a-z_/]+)/(ch[0|_]?[1-2]/)?(DCS_[0-9]{2}_([a-zA-Z0-9_]*)_ch([12])_(DSDB|DSIB).*\.(raw|aisp|xml))$
      # Metadata key to group
      path-metadata-elements:
        missionId: 2
        satelliteId: 3
        sessionId: 7
        channelId: 8
    plans-and-reports:
      # Regex pattern to identify relevant metadata (files) 
      pattern-config: ^(S1[ABCD_]_OPER_REP_MP_MP__PDMC_|S1[AB_]OPER_REP_MP_MPPDMC|S1[ABCD]_OPER_MPL_SP.{4}_PDMC_|S1[ABCD_]_OPER_MPL_FS.{4}_PDMC_|S1[ABCD]_OPER_REP_PASS_[1-9]_.{4}_|S[12]__OPER_SRA_EDRS_[AC]_PDMC_|EDR_OPER_MPL_RQ[1-9]_O[AC]_|EDR_OPER_MPL_[LM]AS_O[AC]_|EDR_OPER_MPL_CR[1-9]_O[AC]_|EDR_OPER_MPL_SS[1-9]_O[AC]_|EDR_OPER_MPL_ER[1-9]_O[AC]_|EDR_OPER_SER_SR[1-9]_O[AC]_|S1[ABCD]_OPER_MPL_ORBOEM_|EDR_OPER_MPL_GOB_P[AC]_|EDR_OPER_MPL_GOB_R[AC]_|S1[ABCD]_OPER_REP__SUP___|S1[ABCD]_OPER_REP_STNACQ_.{4}_|S1[ABCD_]_OPER_REP_STNUNV_.{4}_|S[123][ABCD_]_OPER_SRA_BANSEG_PDMC_|S1[ABCD]_OPER_TLM__REQ_[A-O]_|S1[ABCD]_OPER_REP__SMPR__|S1[ABCD]_OPER_MPL__SSC___|S1[ABCD]_OPER_TLM__PSCAT_|S1[ABCD]_OPER_MPL_OCMSAR_|S1[ABCD]_OPER_REP__MACP__|S1[ABCD]_OPER_REP__MCSF__|S1[ABCD]_OPER_MPL__NPPF__|S1[ABCD]_OPER_MPL__NPIF__|S1[ABCD]_OPER_REP_NPIFCC_|S[123][ABCD_]_OPER_SRA_GSUNAV_PDMC_|S1[ABCD]_OPER_OBS_MIMG___|S1[ABCD]_OPER_AUX_RDB____MPC__|S1[ABCD]_OPER_MPL_SESDB[ABCD]_|S1[ABCD]_OPER_REP__CHF___|S1[AB]_OPER_REP__FCHF__|S1[AB]_OPER_AM[VH_]_FAILUR_MPC__|S1[AB]_OPER_AUX_QCSTDB_|S1[AB_]_OPER_REP_QC...._MPC__|S1[AB]OPER_REPSUP__|S1[AB]OPER_REPMACP_).*(\.xml|\.XML|\.EOF|\.TGZ|\.zip|\.ZIP)?$
      # Local directory (must ende with '/') 
      local-directory: /data/local-catalog/plans_and_reports/
    level-segments:
       # Regex pattern to identify relevant metadata (files) 
      pattern-config: ^(S1|AS)(A|B)_(S[1-6]|RF|GP|HK|IW|EW|WV|N[1-6]|EN|IM)_(SLC|GRD|OCN|RAW)(F|H|M|_)_(0)(A|C|N|S|_)(SH|__|SV|HH|HV|VV|VH|DH|DV)_([0-9a-z]{15})_([0-9a-z]{15})_([0-9]{6})_([0-9a-z_]{6})\w{1,}\.(SAFE)(/.*)?$
      # Local directory (must ende with '/') 
      local-directory: /data/local-catalog/level_segments/ 
    level-products:
      # Regex pattern to identify relevant metadata (files) 
      pattern-config: ^(S1|AS)(A|B)_(S[1-6]|RF|IW|EW|WV|GP|HK|N[1-6]|EN|IM)_(SLC|GRD|OCN|RAW)(F|H|M|_)_(0|1|2)(A|C|N|S|_)(SH|SV|HH|HV|VV|VH|DH|DV)_([0-9a-z]{15})_([0-9a-z]{15})_([0-9]{6})_([0-9a-z_]{6})\w{1,}\.(SAFE)(/.*)?$
      # Local directory (must ende with '/') 
      local-directory: /data/local-catalog/level_products/ 
    spp-products:
      # Regex pattern to identify relevant metadata (files)
      pattern-config: ^(S1|AS)(A|B)_(__)_(OBS)(_)_(S)(S)(__)_([0-9a-z]{15})_([0-9a-z]{15})_([0-9]{6})_(\w{1,})$
      # Local directory (must ende with '/') 
      local-directory: /data/local-catalog/spp_products/ 
    spp-mbu-products:
      # Regex pattern to identify relevant metadata (files)
      pattern-config: ^(s1)(a|b)-([0-9a-z]{2})([0-9a-z]{1})-(mbu)-()()(vv|hh)-([0-9a-z]{15})-([0-9a-z]{15})-([0-9]{6})-([a-z0-9]{6})-([0-9]{3})_([A-Z0-9]{4})\.(bufr)$
      # Local directory (must ende with '/') 
      local-directory: /data/local-catalog/spp_mbu_products/   # Configuration of product insertion
    s3-aux:
      pattern-config: ^([a-zA-Z0-9][a-zA-Z0-9])(\w{1})_((OL|SL|SR|DO|MW|GN|SY|TM|AX)_(0|1|2|_)_\w{4}AX)_(\d{8}T\d{6})_(\d{8}T\d{6})_(\d{8}T\d{6})_(_{17})_(\w{3})_(\w{8})\.(SEN3)\/?(.+)?$
      local-directory: /data/local-catalog/s3_aux/
    s3-products:
      pattern-config: ^([a-zA-Z0-9][a-zA-Z0-9])(\w{1})_((OL|SL|SR|DO|MW|GN|SY|TM|AX)_(0|1|2|_)_\w{4}(?!AX)\w{2})_(\d{8}T\d{6})_(\d{8}T\d{6})_(\d{8}T\d{6})_(\w{17})_(\w{3})_(\w{8})\.(SEN3|ISIP)\/?(.+)?$
      local-directory: /data/local-catalog/s3_products/
  product-insertion:
    # The maximal number of consecutive retries following an error  
    max-retries: 3
    # Temporisation in ms between two retries     
    tempo-retry-ms: 1000


# REST controller
server:
  # Port used for publishing REST API
  port: 8080                                                      
  

# Status
status:
  # The number of consecutive processing errors leading to the state FATALERROR
  max-error-counter-processing: 3           
  # The number of consecutive MQI errors leading to the state FATALERROR                     
  max-error-counter-mqi: 30                                      
  
