kind: StatefulSet
apiVersion: apps/v1
metadata:
  name: {{ .Release.Name }}
  namespace: {{ .Values.processing.namespace }}
  generation: 1
  labels:
    app: {{ .Release.Name }}
  annotations:
    deployment.kubernetes.io/revision: '1'
spec:
  selector:
    matchLabels:
      app: {{ .Release.Name }}
  replicas: {{ .Values.replicaCount.contingency_ingestion }}
  template:
    metadata:
      name: {{ .Release.Name }}
      labels:
        app: {{ .Release.Name }}
        type: {{ .Values.processing.namespace }}
    spec:
      terminationGracePeriodSeconds: 30
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: {{ .Values.worker.label.key }}
                operator: In
                values:
                - {{ .Values.worker.label.value }}
      containers:
      - name: ingestion-trigger
        image: {{ .Values.image.registry }}/{{ .Values.image.repository }}/{{ .Values.ingestionTriggerImage.name }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        resources:
          requests:
            memory: {{ .Values.ingestion_trigger.ram.request }}
            cpu: {{ .Values.ingestion_trigger.cpu.request }}
          limits:
            memory: {{ .Values.ingestion_trigger.ram.limit }}
            cpu: {{ .Values.ingestion_trigger.cpu.limit }}
        volumeMounts: 
        - name: service-logging-config-volume
          mountPath: /app/log
        - name: datadir
          mountPath: /data/inbox
        - name: trigger-config-volume
          mountPath: /app/config
        env:
        - name: JAVA_XMS
          value: {{ .Values.ingestion_trigger.javaOpts.xms }}
        - name: JAVA_XMX
          value: {{ .Values.ingestion_trigger.javaOpts.xmx }}
        - name: mongodb.username
          valueFrom:
            secretKeyRef:
              name: mongodb
              key: USERNAME
        - name: mongodb.password
          valueFrom:
            secretKeyRef:
              name: mongodb
              key: PASSWORD
        envFrom:
        - configMapRef:
            name: s1pdgs-config
        - configMapRef:
            name: s1pdgs-logging-config
        - configMapRef:
            name: s1pdgs-env
        ports:
        - name: web
          protocol: TCP
          containerPort: {{ .Values.pollingService.port }}
        securityContext:
          privileged: false
        livenessProbe:
          httpGet:
            path: /app/status
            port: {{ .Values.pollingService.port }}
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
      - name: ingestion-worker
        image: {{ .Values.image.registry }}/{{ .Values.image.repository }}/{{ .Values.ingestionWorkerImage.name }}:{{ .Values.image.tag }}
        imagePullPolicy: Always
        resources:
          requests:
            memory: {{ .Values.ingestion_worker.ram.request }}
            cpu: {{ .Values.ingestion_worker.cpu.request }}
          limits:
            memory: {{ .Values.ingestion_worker.ram.limit }}
            cpu: {{ .Values.ingestion_worker.cpu.limit }}
        volumeMounts: 
        - name: service-logging-config-volume
          mountPath: /app/log
        - name: datadir
          mountPath: /data/inbox
        - name: worker-config-volume
          mountPath: /app/config
        - name: s3-upload-cache
          mountPath: {{ .Values.ingestion_worker.uploadCache.location }}
        ports:
        - name: web
          protocol: TCP
          containerPort: {{ .Values.ingestionService.port }}
        env:
        - name: JAVA_XMS
          value: {{ .Values.ingestion_worker.javaOpts.xms }}
        - name: JAVA_XMX
          value: {{ .Values.ingestion_worker.javaOpts.xmx }}
        - name: storage_user_id
          valueFrom:
            secretKeyRef:
              name: obs
              key: USER_ID
        - name: storage_user_secret
          valueFrom:
            secretKeyRef:
              name: obs
              key: USER_SECRET
        envFrom:
        - configMapRef:
            name: s1pdgs-config
        - configMapRef:
            name: s1pdgs-logging-config
        - configMapRef:
            name: s1pdgs-env
        securityContext:
          privileged: false
        livenessProbe:
          httpGet:
            path: /app/status
            port: {{ .Values.ingestionService.port }}
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
      - name: ingestion-mqi
        image: {{ .Values.mqiImage.registry }}/{{ .Values.mqiImage.repository }}/{{ .Values.mqiImage.name }}:{{ .Values.mqiImage.tag }}
        imagePullPolicy: Always
        resources:
          requests:
            memory: {{ .Values.inbox_ingestion_mqi.ram.request }}
            cpu: {{ .Values.inbox_ingestion_mqi.cpu.request }}
          limits:
            memory: {{ .Values.inbox_ingestion_mqi.ram.limit }}
            cpu: {{ .Values.inbox_ingestion_mqi.cpu.limit }}
        volumeMounts: 
        - name: service-logging-config-volume
          mountPath: /app/log
        - name: mqi-config-volume
          mountPath: /app/config
        ports:
        - name: data
          protocol: TCP
          containerPort: {{ .Values.mqiService.port }}
        env:
        - name: JAVA_XMS
          value: {{ .Values.inbox_ingestion_mqi.javaOpts.xms }}
        - name: JAVA_XMX
          value: {{ .Values.inbox_ingestion_mqi.javaOpts.xmx }}
        - name: storage_user_id
          valueFrom:
            secretKeyRef:
              name: obs
              key: USER_ID
        - name: storage_user_secret
          valueFrom:
            secretKeyRef:
              name: obs
              key: USER_SECRET
        envFrom:
        - configMapRef:
            name: s1pdgs-config
        - configMapRef:
            name: s1pdgs-logging-config
        - configMapRef:
            name: s1pdgs-env
        livenessProbe:
          httpGet:
            path: /app/status
            port: {{ .Values.mqiService.port }}
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
      
      imagePullSecrets:
      - name: {{ .Values.image.imagePullSecrets }}
      restartPolicy: Always
      dnsPolicy: ClusterFirst
      subdomain: {{ .Release.Name }}-svc
      securityContext: {}
      schedulerName: default-scheduler
      volumes:
        - name: service-logging-config-volume
          configMap:
            name: s1pdgs-logging-config
        - name: trigger-config-volume
          configMap:
            name: {{ .Release.Name }}-trigger-config
        - name: worker-config-volume
          configMap:
            name: {{ .Release.Name }}-worker-config
        - name: mqi-config-volume
          configMap:
            name: {{ .Release.Name }}-mqi-config
        - name: s3-upload-cache
          emptyDir:
            medium: {{ .Values.ingestion_worker.uploadCache.medium }}
            sizeLimit: {{ .Values.ingestion_worker.uploadCache.size }}
  serviceName: {{ .Release.Name }}-svc
  revisionHistoryLimit: 10
  volumeClaimTemplates:
  - metadata:
      name: datadir
    spec:
      accessModes:
      - ReadWriteOnce
      resources:
        {{- toYaml .Values.resources | nindent 10 }}
