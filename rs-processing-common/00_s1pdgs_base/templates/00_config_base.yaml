apiVersion: v1
kind: ConfigMap
metadata:
  name: s1pdgs-config
  namespace: {{ .Values.processing.namespace }}
  
# This file does contain configuration that is used in all configurations as base.
# Please do not edit this file on your own and use the config maps for environmental configuration instead
data:
  kafkaTopicList: "{{ .Values.kafkaTopicList }}"
  
  # -------------------------------------------------------------------------------
  # OBS general configuration
  # -------------------------------------------------------------------------------
  # Retry policy and timeout
  storage_retry_obs_max-retries: "{{ .Values.s3.storageRetryObsMaxRetries }}"   # Nb of max retries for the obs client when an exception is raised
  # Nb max of retry for connection to Object Storage
  storage_retry-policy_condition_max-retries: "3"
  # base sleep time (milliseconds) for non-throttled exceptions.
  storage_retry-policy_backoff_base-delay-ms: "1500"
  # base sleep time (milliseconds) for throttled exceptions.
  storage_retry-policy_backoff_throttled-base-delay-ms: "3000"
  # maximum back-off time before retrying a request
  storage_retry-policy_backoff_max-backoff-ms: "20000"
  # Timeout used when parallel upload/download are forcefully terminated
  storage_timeout-s_shutdown: "300"
  # Maximal execution time for batch download
  storage_timeout-s_down-exec: "120"
  # Maximal execution time for batch upload
  storage_timeout-s_up-exec: "120"
  # Transfer manager configuration
  # Default size threshold for when to use multipart uploads: default 16 * MB (1024 * 1024)
  transfer-manager_multipart-upload-threshold-mb: "100"
  # Default minimum part size for upload parts: default 5 * MB (1024 * 1024)
  transfer-manager_minimum-upload-part-size-mb: "50"
  # Upload cache location for temporary files (used for parallel multipart upload)
  obs-upload-cache-location: "/opt/s3/uploadCache"
 
  # -------------------------------------------------------------------------------
  # Applicative database (MongoDB) configuration
  # -------------------------------------------------------------------------------
  # Connection

  # Hosts to connect on the database
  mongo_db_host: "{{ .Values.mongodb.host }}"
  # Port to connect on the database
  mongo_db_port: "{{ .Values.mongodb.port }}"
  # Name of the database
  mongo_db_database: "{{ .Values.mongodb.db }}"
  
  # -------------------------------------------------------------------------------
  # Metadata catalog configuration
  # -------------------------------------------------------------------------------
  # Connection to metadata catalog
  # Port for accessing to the metadata catalog REST API
  catalog_rest_server_port: "8080"
  # URI for accessing to the metadata catalog REST API
  catalog_rest_host: s1pro-metadata-catalog-worker-svc:8080
