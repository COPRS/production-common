#!/bin/sh

OUTPUT=$1
TIMEFRAME="2h"

if [ -z $LOCATION ]
then
    echo "Please source environment"
    exit 1
fi

if [ $# -ne 1 ]
then
    echo "usage: $0 <outputdir>"
    exit 1
fi

mkdir -p $OUTPUT

extractStdOut() {
    pod=$1
    namespace=$2
    
    echo "Extracting stdout from pod $pod in $namespace"
    #echo "xxx" > "$OUTPUT/stdout_"$pod"_stdout".log
    for container in `kubectl -n $namespace get pods $pod -o jsonpath="{.spec.containers[*].name}"`
    do
       echo "... Extracting stdout from container $container"
       kubectl -n $namespace logs $pod -c $container --since="$TIMEFRAME" > "$OUTPUT/stdout_$container"_"$pod.log"
    done
}

extractFromPod() {
    pod=$1
    namespace=$2
    
    echo "Extracting log $log file from pod $pod in $namespace"
    for container in `kubectl -n $namespace get pods $pod -o jsonpath="{.spec.containers[*].name}"`
    do
      for log in `kubectl -n $namespace exec $pod -c $container -- ls /app 2> /dev/null | egrep "(report\.json|\.log|\.log.*\.gz)$"`
      do
	    echo "... Extracting from container $container log $log"
        kubectl -n $namespace cp $pod:/app/$log $OUTPUT/$pod"_"$container"_"$log -c $container &> /dev/null
      done
    done
}


for pod in `kubectl -n $S1PRO_NAMESPACE get pods | cut -d " " -f1 | grep -v "NAME"`
#for pod in `cat pods`
do
    extractStdOut $pod $S1PRO_NAMESPACE
    extractFromPod $pod $S1PRO_NAMESPACE
done

for pod in `kubectl -n $KAFKA_NAMESPACE get pods | cut -d " " -f1 | egrep "^kafka-[0-9]" | grep -v "NAME"`
do
  extractStdOut $pod $KAFKA_NAMESPACE
  extractFromPod $pod $KAFKA_NAMESPACE
done

echo "done."
