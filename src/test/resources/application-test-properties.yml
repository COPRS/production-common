spring:
  application:
    name: s1pdgs-mqi-app
logging:
  config: ./src/test/resources/log4j2.yml
kafka:
  bootstrap-servers: ${spring.embedded.kafka.brokers}
  hostname: wrapper-0
  client-id: wrapper
  error-topic: t-pdgs-errors
  consumer:
    group-id: wrappers
    max-poll-interval-ms: 3600000
    max-poll-records: 1
    session-timeout-ms: 10000
    heartbeat-intv-ms: 3000
    auto-offset-reset: latest
    offset-dft-mode: -2
  listener:
    poll-timeout-ms: 500
  producer:
    max-retries: 10
application:
  hostname: wrapper-0
  max-error-counter: 3
  stop-fixed-delay-ms: 3000
  wait-next-ms: 500
  product-categories:
    auxiliary-files:
      consumption:
        enable: false
        topicswithprioritystr: ""
      publication:
        enable: false
    edrs-sessions:
      consumption:
        enable: true
        topicswithprioritystr: "t-pdgs-edrs-sessions:100||t-topic-2:10"       
      publication:
        enable: false
    level-products:
      consumption:
        enable: false
        topicswithprioritystr: "" 
      publication:
        enable: true
        routing-file: ./src/test/resources/routing-files/level-products.xml
    level-reports:
      consumption:
        enable: false        
        topicswithprioritystr: "" 
      publication:
        enable: true
        routing-file: ./src/test/resources/routing-files/level-reports.xml
    level-jobs:
      consumption:
        enable: true
        topicswithprioritystr: "t-pdgs-l0-jobs:100"   
      publication:
        enable: false
    level-segments:
      consumption:
        enable: false
      publication:
        enable: false
server:
  port: 8080
persistence:
  host-uri-catalog: http://app-catalog:8080
  port-uri-other-app: 8080
  max-retries: 3
  tempo-retry-ms: 500
  other-app:
    suffix-uri: .processing.default.svc.cluster.local
    begin-uri-processing: /status/