#TODO: figure out why I need this here and in bootstrap.yml
spring:
  application:
    name: s1pdgs-metadata-catalog
    
# Logging
logging:
  config: ${catalog_logging_config:logback-spring.xml}
  level:
    ROOT: ${catalog_logging_level_root:ERROR}
    org.springframework: ${catalog_logging_level_orgspringframework:ERROR}
    fr.viveris.s1pdgs: ${catalog_logging_level_frviveriss1pdgs:INFO}
    kafka: ${catalog_logging_level_kafka:WARN}
    org.apache: ${catalog_logging_level_orgapache:WARN}
    org.springframework.web.filter.CommonsRequestLoggingFilter: DEBUG
  file: ${catalog_logging_file:./s1pdgs-metadata-catalog.log}

# KAFKA
kafka:
  bootstrap-servers: ${kafka_bootstrap-servers:kafka-svc:9093}
  group-id: ${catalog_kafka_group:metadata-catalogs}
  client-id: ${catalog_kafka_client:metadata-catalog}
  poll-timeout: ${catalog_kafka_poll-timeout:500}
  topic:
    auxiliary-files: ${kafka_topic_auxiliary_files:t-pdgs-auxiliary-files}
    edrs-sessions: ${kafka_topic_edrs_sessions:t-pdgs-edrs-sessions}
    l0-slices: ${kafka_topic_l0_slices:t-pdgs-l0-slices}
    l0-acns: ${kafka_topic_l0_acns:t-pdgs-l0-acns}
    l1-slices: ${kafka_topic_l1_slices:t-pdgs-l1-slices}
    l1-acns: ${kafka_topic_l1_acns:t-pdgs-l1-acns}
    
# Elastic Search
elasticsearch:
  host: ${elastic_host:es-svc}
  port: ${elastic_port:25000}
  index-type: ${elastic_index-type:metadata}

#Object Storage
storage:
  user:
    id: ${storage_user_id}
    secret: ${storage_user_secret}
  endpoint: ${storage_endpoint}
  region: ${storage_region}
  buckets:
    auxiliary-files: ${storage_buckets_auxiliary-files:auxiliary-files}
    session-files: ${storage_buckets_session-files:session-files}
    l0-acns: ${storage_buckets_l0-acns:acns}
    l0-slices: ${storage_buckets_l0-slices:l0-slices}
    l1-acns: ${storage_buckets_l1-acns:l1-acns}
    l1-slices: ${storage_buckets_l1-slices:l1-slices}
    
# File
file:
  file-with-manifest-ext: ${catalog_file-with-manifest-ext:.safe}
  manifest-filename: ${catalog_manifest-filename:manifest.safe}
  auxiliary-files:
    local-directory: ${catalog_auxiliary-files_local-directory:/data/local-catalog/auxiliary_files/} # Must contains the last /
  session-files:
    local-directory: ${catalog_session-files_local-directory:/data/local-catalog/edrs_sessions/} # Must contains the last /
  l0-slices:
    local-directory: ${catalog_l0-slices_local-directory:/data/local-catalog/l0_slices/} # Must contains the last /
  l0-acns:
    local-directory: ${catalog_l0-acns_local-directory:/data/local-catalog/l0_acns/} # Must contains the last /
  l1-slices:
    local-directory: ${catalog_l1-slices_local-directory:/data/local-catalog/l1_slices/} # Must contains the last /
  l1-acns:
    local-directory: ${catalog_l1-acns_local-directory:/data/local-catalog/l1_acns/} # Must contains the last /

# REST controller
server:
  port: ${catalog_rest_server_port:8080}
  
# Metadata Extractor
mdextractor:
  typeoverlapstr: ${products_overlap-per-acq}
  typeslicelengthstr: ${products_slice-length-per-acq}
  xslt-directory: ${catalog_xslt-directory:xsltDir/} # Must contains the last /
  