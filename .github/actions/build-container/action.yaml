# Copyright 2023 Airbus
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: 'Build Container'
description: 'Build docker image for any Dockerfile in rs-container'
inputs:
  IMAGE_NAME_SUFFIX: 
    description: 'Suffix for the image name'
    required: true
  BUILD_CONTEXT:
    description: 'Build context for docker build'
    required: true
  WERUM_ARTIFACTORY_USER:
    description: 'Username for Artifactory'
    required: true
  WERUM_ARTIFACTORY_PASSWORD:
    description: 'Password for Artifactory'
    required: true

runs:
  using: "composite"
  steps:
  - name: Login to Artifactory
    uses: docker/login-action@v1
    with:
      registry: ${{ env.ARTIFACTORY_BASE }}/${{ env.ARTIFACTORY_PROJECT_DOCKER }}
      username: ${{ inputs.WERUM_ARTIFACTORY_USER }}
      password: ${{ inputs.WERUM_ARTIFACTORY_PASSWORD }}
                
  - name: Extract Docker metadata
    id: meta
    uses: docker/metadata-action@v3
    with:
      images:  ${{ env.ARTIFACTORY_BASE }}/${{ env.ARTIFACTORY_PROJECT_DOCKER }}/rs-core-${{ inputs.IMAGE_NAME_SUFFIX }} 
          
  - name: Build image
    uses: docker/build-push-action@v2
    with:
      load: true
      context: ${{ inputs.BUILD_CONTEXT }} 
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}

  - name: Scan image
    uses: anchore/scan-action@v2
    id: scan
    with:
      image: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
      acs-report-enable: true
      severity-cutoff: critical

  - name: Upload Anchore scan json report
    uses: actions/upload-artifact@v2
    with:
      name: vulnerabilities-${{ inputs.IMAGE_NAME_SUFFIX }} 
      path: ${{ steps.scan.outputs.vulnerabilities }}

  - name: Push image
    shell: bash
    run: |
      docker push ${{ fromJSON(steps.meta.outputs.json).tags[0] }};
