name: 'Build IPF Container'
description: 'Build docker image for any IPF Dockerfile in rs-container'
inputs:
  BRANCH_NAME:
    description: 'Name of the branch/tag'
    required: true
  IMAGE_NAME: 
    description: 'Image name'
    required: true
  BUILD_CONTEXT:
    description: 'Build context for docker build'
    required: true
  WERUM_ARTIFACTORY_USER:
    description: 'Username for Artifactory'
    required: true
  WERUM_ARTIFACTORY_PASSWORD:
    description: 'Password for Artifactory'
    required: true

runs:
  using: "composite"
  steps:
  - name: Login to Artifactory
    uses: docker/login-action@v1
    with:
      registry: ${{ env.ARTIFACTORY_BASE }}/${{ env.ARTIFACTORY_PROJECT_DOCKER_PRIVATE }}
      username: ${{ inputs.WERUM_ARTIFACTORY_USER }}
      password: ${{ inputs.WERUM_ARTIFACTORY_PASSWORD }}
                
  - name: Extract Docker metadata
    id: meta
    uses: docker/metadata-action@v3
    with:
      images:  ${{ env.ARTIFACTORY_BASE }}/${{ env.ARTIFACTORY_PROJECT_DOCKER_PRIVATE }}/${{ inputs.IMAGE_NAME}} 
          
  - name: Build image
    uses: docker/build-push-action@v2
    with:
      load: true
      context: ${{ inputs.BUILD_CONTEXT }}
      tags: ${{ steps.meta.outputs.tags }}
      labels: ${{ steps.meta.outputs.labels }}
      secrets: |
        "ARTIFACTORY_USER=${{ inputs.WERUM_ARTIFACTORY_USER }}"
        "ARTIFACTORY_PASS=${{ inputs.WERUM_ARTIFACTORY_PASSWORD }}"
      build-args: |
        BRANCH=${{ inputs.BRANCH_NAME }}
        BRANCH_TEXT=${{ inputs.BRANCH_NAME }}
        VERSION=${{ env.VERSION }}
        COMMIT_ID=${{ env.COMMIT_ID }}

  - name: Scan image
    uses: anchore/scan-action@v3
    id: scan
    with:
      image: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
      fail-build: false

  - name: Upload Anchore scan SARIF report
    uses: github/codeql-action/upload-sarif@v2
    with:
      sarif_file: ${{ steps.scan.outputs.sarif }}

  - name: Upload Anchore scan json report
    uses: actions/upload-artifact@v2
    with:
      name: vulnerabilities-${{ inputs.IMAGE_NAME }} 
      path: ${{ steps.scan.outputs.vulnerabilities }}

  - name: Push image
    shell: bash
    run: |
      docker push ${{ fromJSON(steps.meta.outputs.json).tags[0] }};
