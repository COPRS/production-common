name: 'Build Core'
description: 'Builds core'
outputs:
  exec-worker:
  description: "if exec worker docker images need to be build" 
  value: ${{ steps.filter.outputs.exec-worker }}
runs:
  using: "composite"
  steps:
    - name: Extract branch name
      id: extract_branch
      run: |
        echo "##[set-output name=branch;]$(echo ${GITHUB_REF} | rev | cut -d / -f 1 | rev)"
        cd -rs-core
      shell: bash

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v1

    - name: Set up Buildx
      uses: docker/setup-buildx-action@v1
      with:
        driver-opts: env.BUILDKIT_STEP_LOG_MAX_SIZE=-1
    
    - name: GitGuardian scan
      uses: GitGuardian/gg-shield-action@master
      env:
        GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
        GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
        GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
        GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
        GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

    - name: Login to Github Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
                    
    - name: Extract Docker metadata
      id: meta
      uses: docker/metadata-action@v3
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
              
    - name: Build image
      uses: docker/build-push-action@v2
      with:
        load: true
        context: ./rs-core
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        secrets: |
          "ARTIFACTORY_USER=${{ secrets.WERUM_ARTIFACTORY_USER }}"
          "ARTIFACTORY_PASS=${{ secrets.WERUM_ARTIFACTORY_PASSWORD }}"
        build-args: |
          BRANCH=${{ steps.extract_branch.outputs.branch }}
          BRANCH_TEXT=${{ steps.extract_branch.outputs.branch }}
          VERSION=${{ env.VERSION }}
          COMMIT_ID=${{ env.COMMIT_ID }}
          SONARQUBE_HOST=${{ secrets.SONARQUBE_HOST }}
          SONARQUBE_TOKEN=${{ secrets.WERUM_SONARQUBE_TOKEN }}
          PROJECT_KEY=${{ github.repository }}

    - name: Scan image
      uses: anchore/scan-action@v2
      id: scan
      with:
        image: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
        acs-report-enable: true
        fail-build: false
        severity-cutoff: critical

    - name: Upload Anchore scan SARIF report
      uses: github/codeql-action/upload-sarif@v1
      with:
        sarif_file: ${{ steps.scan.outputs.sarif }}

    - name: Upload Anchore scan json report
      uses: actions/upload-artifact@master
      with:
        name: vulnerabilities-build
        path: ${{ steps.scan.outputs.vulnerabilities }}

    - name: Push image
      run: |
        docker push ${{ fromJSON(steps.meta.outputs.json).tags[0] }};
        cd ..
      shell: bash

    - name: Determine if exec worker docker images need to be build
      uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          exec-worker:
            - 'rs-core/ipf-execution-worker/**'
            - 'rs-libs/obs-sdk/**'
            - 'rs-libs/lib-commons/**'
            - 'rs-libs/app-status/**'
            - 'rs-libs/mqi-client/**'
            - 'rs-libs/metadata-client/**'