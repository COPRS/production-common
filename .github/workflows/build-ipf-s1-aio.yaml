name: Build IPF S1 AIO

on:
  push:
    paths:
      - 'rs-container/docker_s1_ipf_aio/**'
  workflow_call:
    secrets:
      WERUM_ARTIFACTORY_USER:
        description: 'Username to log into Artifactory'
        required: true
      WERUM_ARTIFACTORY_PASSWORD:
        description: 'Password to log into Artifactory'
        required: true
      GITGUARDIAN_API_KEY:
        description: 'API Key for GitGuardian'
        required: true
  workflow_dispatch:

env:
  REGISTRY_BASE: artifactory.coprs.esa-copernicus.eu
  ARTIFACTORY_PROJECT: werum-docker
  USERNAME: ${{ secrets.WERUM_ARTIFACTORY_USER }}
  PASSWORD: ${{ secrets.WERUM_ARTIFACTORY_PASSWORD }}
  VERSION: 3.32.1
  IMAGE_NAME: "rs-ipf-aiop
  COMMIT_ID: ${{ github.sha }}

jobs:
  build-aiop:
    runs-on: ubuntu-latest
    steps:
      - name: Extract branch name
        shell: bash
        run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF} | rev | cut -d / -f 1 | rev)"
        id: extract_branch

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v1

      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # fetch all history so multiple commits can be scanned
      
      - name: GitGuardian scan
        uses: GitGuardian/gg-shield-action@master
        env:
          GITHUB_PUSH_BEFORE_SHA: ${{ github.event.before }}
          GITHUB_PUSH_BASE_SHA: ${{ github.event.base }}
          GITHUB_PULL_BASE_SHA: ${{ github.event.pull_request.base.sha }}
          GITHUB_DEFAULT_BRANCH: ${{ github.event.repository.default_branch }}
          GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

      - name: Login to Github Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY_BASE }}/${{ env.ARTIFACTORY_PROJECT }}
          username: ${{ env.USERNAME }}
          password: ${{ env.PASSWORD }}
                    
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY_BASE }}/${{ env.ARTIFACTORY_PROJECT }}/${{ env.IMAGE_NAME }}
              
      - name: Build image
        uses: docker/build-push-action@v2
        with:
          load: true
          context: ./rs-container/docker_s1_ipf_aio
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BRANCH=${{ steps.extract_branch.outputs.branch }}
            BRANCH_TEXT=${{ steps.extract_branch.outputs.branch }}
            VERSION=${{ env.VERSION }}
            COMMIT_ID=${{ env.COMMIT_ID }}

      - name: Scan image
        uses: anchore/scan-action@v2
        id: scan
        with:
          image: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          acs-report-enable: true
          severity-cutoff: critical

      - name: Upload Anchore scan SARIF report
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Upload Anchore scan json report
        uses: actions/upload-artifact@master
        with:
          name: vulnerabilities-s3-ipfsimulator
          path: ${{ steps.scan.outputs.vulnerabilities }}

      - name: Push image
        run: |
          docker push ${{ fromJSON(steps.meta.outputs.json).tags[0] }};