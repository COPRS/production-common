name: Build RS core components

on:
  push:
    paths:
      - 'processing-common/**'
      - '.github/workflows/build-rs-core-components.yml'
    workflow_dispatch:
      
env:
  RS_CORE_FOLDER: processing-common
  ARTIFACTORY_BASE: artifactory.coprs.esa-copernicus.eu
  ARTIFACTORY_PROJECT: rs-docker
  ARTIFACTORY_SUB_PROJECT: rs-core
  
jobs:
  
  release:
    strategy:
      fail-fast: false
      matrix:
        component: [ingestion]
#        component: [ingestion, catalog, data-lifecycle, compression, prip, ddip]
    runs-on: ubuntu-latest
    steps:
   
    - name: Extract branch or tag name
      shell: bash
      run: echo "##[set-output name=branch;]$(echo ${GITHUB_REF} | rev | cut -d / -f 1 | rev)"
      id: extract_branch
      
    - name: Generate file name
      shell: bash
      run: |
        corecomp=${{ matrix.component }}
        corefilename="RS_CORE_${corecomp^^}_${{ steps.extract_branch.outputs.branch }}_$(date '+%Y-%m-%d')"
        echo "##[set-output name=filename;]$(echo ${corefilename})"
      id: gen_filename
      
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
      
    - name: Build structure
      shell: bash
      run: |
        mkdir -p ${{ steps.gen_filename.outputs.filename }}/${{ steps.gen_filename.outputs.filename }}_Executables
        cp -r ${{ env.RS_CORE_FOLDER }}/${{ matrix.component }}/content/* ${{ steps.gen_filename.outputs.filename }}/${{ steps.gen_filename.outputs.filename }}_Executables
        
    - name: Create PDF
      uses: docker://ghcr.io/coprs/reference-system-software:dependencies_pandoc_latex
      with:
        args: -s --resource-path="/github/workspace/${{ env.RS_CORE_FOLDER }}/${{ matrix.component }}/" --listings -H /root/.pandoc/listings-setup.tex --table-of-contents --pdf-engine=xelatex --output="${{ steps.gen_filename.outputs.filename }}/${{ steps.gen_filename.outputs.filename }}_Release_Note.pdf" --from=markdown "./${{ env.RS_CORE_FOLDER }}/${{ matrix.component }}/doc/SRN.md"
    
    - name: Zip
      uses: montudor/action-zip@v1
      with:
        args: zip -qq -r ${{ steps.gen_filename.outputs.filename }}.zip ${{ steps.gen_filename.outputs.filename }}/*
        
    - name: Push to Artifactory
      shell: bash
      run: |
        ls -l
        find ${{ steps.gen_filename.outputs.filename }}
#      run: curl -u${{ secrets.WERUM_ARTIFACTORY_USER }}:${{ secrets.WERUM_ARTIFACTORY_PASSWORD }} -T ${{ steps.gen_filename.outputs.filename }}.zip "https://${{ env.ARTIFACTORY_BASE }}/artifactory/${{ env.ARTIFACTORY_PROJECT }}/${{ env.ARTIFACTORY_SUB_PROJECT }}/"   
          
    