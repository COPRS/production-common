name: Java Maven CI

on: [push]

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}

jobs:
  docker:
    runs-on: ubuntu-latest    
    
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Github Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
                    
      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
              
      - name: Build image
        uses: docker/build-push-action@v2
        with:
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Scan image
        uses: anchore/scan-action@v2
        id: scan
        with:
          image: ${{ fromJSON(steps.meta.outputs.json).tags[0] }}
          acs-report-enable: true
          fail-build: false
          severity-cutoff: critical

      - name: Upload Anchore scan SARIF report
        uses: github/codeql-action/upload-sarif@v1
        with:
          sarif_file: ${{ steps.scan.outputs.sarif }}

      - name: Upload Anchore scan json report
        uses: actions/upload-artifact@master
        with:
          name: vulnerabilities
          path: ${{ steps.scan.outputs.vulnerabilities }}

      - name: Push image
        run: |
          docker push ${{ fromJSON(steps.meta.outputs.json).tags[0] }};

  applicative-catalog:
    runs-on: ubuntu-latest
    needs: docker

    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v1

      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Login to Github Registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract Docker metadata
        id: meta
        uses: docker/metadata-action@v3
        with:
          images: ${{ env.REGISTRY }}/coprs/s1pro-core-applicative-catalog

      - name: Build image
        uses: docker/build-push-action@v2
        with:
          push: true
          context: ./applicative-catalog
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            BRANCH=master   
