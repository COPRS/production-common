name: Build RS-Core

on: 
  push:
    paths:
      - 'rs-core/**'
      - 'rs-libs/**'
      - '.github/workflows/build-ci.yaml'
      - '.github/workflows/build-docker.yaml'
      - '.github/actions/**'
  workflow_dispatch:

env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: coprs/rs-core
  VERSION: 3.32.1
  COMMIT_ID: ${{ github.sha }}
  ARTIFACTORY_BASE: artifactory.coprs.esa-copernicus.eu
  ARTIFACTORY_PROJECT: "rs-maven"

jobs:

  changes:
    runs-on: ubuntu-latest
    outputs:
      libs: ${{ steps.filter.outputs.libs }}
      core: ${{ steps.filter.outputs.core }}
    steps:
    - uses: actions/checkout@v2
    - uses: dorny/paths-filter@v2
      id: filter
      with:
        filters: |
          libs:
            - 'rs-libs/**'
          core:
            - 'core/**'
            
  build-libs:
    needs: changes
    if: ${{ needs.changes.outputs.libs == 'true' }} 
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: ./.github/actions/build-libs
        with:
          secrets-gitguardian-api-key: ${{ secrets.GITGUARDIAN_API_KEY }}
          secrets-sonarqube-host: ${{ secrets.SONARQUBE_HOST }}
          secrets-sonarqube-token: ${{ secrets.SONARQUBE_TOKEN }}
          secrets-artifactory-user: ${{ secrets.WERUM_ARTIFACTORY_USER }}
          secrets-artifactory-password: ${{ secrets.WERUM_ARTIFACTORY_PASSWORD }}
          artifactory-base: ${{ env.ARTIFACTORY_BASE }}
          artifactory-project: ${{ env.ARTIFACTORY_PROJECT }}
      - uses: ./.github/actions/build-core
        with:
          secrets-gitguardian-api-key: ${{ secrets.GITGUARDIAN_API_KEY }}
          secrets-github-token: ${{ secrets.GITHUB_TOKEN }}
          secrets-sonarqube-host: ${{ secrets.SONARQUBE_HOST }}
          secrets-sonarqube-token: ${{ secrets.SONARQUBE_TOKEN }}
          secrets-artifactory-user:  ${{ secrets.WERUM_ARTIFACTORY_USER }}
          secrets-artifactory-password: ${{ secrets.WERUM_ARTIFACTORY_PASSWORD }}
          registry: ${{ env.REGISTRY }}
          image-name: ${{ env.IMAGE_NAME }}
          version: ${{ env.VERSION }}
          commit-id: ${{ env.COMMIT_ID }}
      
  build-core:
    needs: changes
    if: ${{ needs.changes.outputs.core == 'true' }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: ./.github/actions/build-core
        with:
          secrets-gitguardian-api-key: ${{ secrets.GITGUARDIAN_API_KEY }}
          secrets-github-token: ${{ secrets.GITHUB_TOKEN }}
          secrets-sonarqube-host: ${{ secrets.SONARQUBE_HOST }}
          secrets-sonarqube-token: ${{ secrets.SONARQUBE_TOKEN }}
          secrets-artifactory-user:  ${{ secrets.WERUM_ARTIFACTORY_USER }}
          secrets-artifactory-password: ${{ secrets.WERUM_ARTIFACTORY_PASSWORD }}
          registry: ${{ env.REGISTRY }}
          image-name: ${{ env.IMAGE_NAME }}
          version: ${{ env.VERSION }}
          commit-id: ${{ env.COMMIT_ID }}

  generate-reports:
    needs: build-core 
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
      - name: Download json report from build jobs
        uses: actions/download-artifact@v2
        with:
          name: vulnerabilities-build

      - name: Generate CSV and intermediate HTML report
        run: |
          echo "SEVERITY;ID;PACKAGE;VERSION;LINK" > vulnerabilities.csv
          cat vulnerabilities.json | jq -r '.matches[] | "\(.vulnerability.severity);\(.vulnerability.id);\(.artifact.name);\(.artifact.version);\(.vulnerability.links[0])"' >> vulnerabilities.csv
          echo -e '<table>\n<thead>\n<tr class="header">\n<th><p>SEVERITY</p></th>\n<th><p>ID</p></th>\n<th><p>PACKAGE</p></th>\n<th><p>VERSION</p></th>\n</tr>\n</thead>\n<tbody>' > vulnerabilities.html
          cat vulnerabilities.json | jq -r '.matches[] | "<tr>;<td><p>\(.vulnerability.severity)</p></td>;<td><p><a href=\"\(.vulnerability.links[0])\">\(.vulnerability.id)</a></p></td>;<td><p>\(.artifact.name)</p></td>;<td><p>\(.artifact.version)</p></td>;</tr>"' | tr -s ';' '\n' | sed 's!><p>Negligible! style="background-color:#FFFFFF;"><p>Negligible!g' | sed 's!><p>Low! style="background-color:#FFFC9E;"><p>Low!g' | sed 's!><p>Medium! style="background-color:#FE996B;"><p>Medium!g' | sed 's!><p>High! style="background-color:#FD6864;"><p>High!g' | sed 's!><p>Critical! style="background-color:#FE0000;"><p>Critical!g' >> vulnerabilities.html
          echo -e '</tbody>\n</table>' >> vulnerabilities.html
      - name: Convert HTLM to PDF
        uses: docker://ghcr.io/coprs/reference-system:dependencies_wkhtmltopdf
        with:
          args: vulnerabilities.html vulnerabilities.pdf

      - name: Upload Anchore scan reports
        uses: actions/upload-artifact@master
        with:
          name: vulnerabilities-build
          path: |
            vulnerabilities.csv
            vulnerabilities.pdf

  docker-images:
    needs: build-core
    uses: coprs/production-common/.github/workflows/build-docker.yaml@develop-build
    secrets: 
      username: ${{ secrets.WERUM_ARTIFACTORY_USER }}
      password: ${{ secrets.WERUM_ARTIFACTORY_PASSWORD }}

  # If the execution-worker-jar is updated also update the ACQ simulator docker image
  build-acq-simulator:
    needs: build-core
    if: ${{ inputs.exec-worker }}
    uses: coprs/production-common/.github/workflows/build-acqsimulator.yaml@develop-build
    secrets:
      WERUM_ARTIFACTORY_USER: ${{ secrets.WERUM_ARTIFACTORY_USER }}
      WERUM_ARTIFACTORY_PASSWORD: ${{ secrets.WERUM_ARTIFACTORY_PASSWORD }}
      GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}

  # If the execution-worker-jar is updated also update the S1 IPF Simulator image
  build-s1-ipf-simulator:
    needs: build-core
    if: ${{ inputs.exec-worker }}
    uses: coprs/production-common/.github/workflows/build-s1-ipf-simulator.yaml@develop-build
    secrets:
      WERUM_ARTIFACTORY_USER: ${{ secrets.WERUM_ARTIFACTORY_USER }}
      WERUM_ARTIFACTORY_PASSWORD: ${{ secrets.WERUM_ARTIFACTORY_PASSWORD }}
      GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
 
  # If the execution-worker-jar is updated also update the S1 IPF AIO image    
  build-ipf-s1-aio:
    needs: build-core
    if: ${{ inputs.exec-worker }}
    uses: coprs/production-common/.github/workflows/build-ipf-s1-aio.yaml@develop-build
    secrets:
      WERUM_ARTIFACTORY_USER: ${{ secrets.WERUM_ARTIFACTORY_USER }}
      WERUM_ARTIFACTORY_PASSWORD: ${{ secrets.WERUM_ARTIFACTORY_PASSWORD }}
      GITGUARDIAN_API_KEY: ${{ secrets.GITGUARDIAN_API_KEY }}
      