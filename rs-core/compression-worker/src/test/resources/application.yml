# Copyright 2023 Airbus
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

spring:
  application:
    name: s1pdgs-compression-worker
    
# Logging     
logging:
  config: classpath:log4j2-test.yml
  
# KAFKA config for error queue
kafka:
  bootstrap-servers: ${kafka_bootstrap-servers:kafka-headless:9092}   # the bootstrap servers for KAFKA
  group-id: error                                                # the group identifier to use for KAFKA publishers  
  max-retries: 10                                                # number of retries if kafka is not available
  error-topic: t-pdgs-errors
  producer:
    max-retries: 10

status:
  max-error-counter-processing: 2
  max-error-counter-mqi: 2
  delete-fixed-delay-ms: 1000
  block-system-exit: true
  
mqi:
  host-uri: http://localhost:8081       # the host and port for querying MQI server
  max-retries: 3                        # the maximal number of consecutive retries following a MQI request error 
  tempo-retry-ms: 1000                  #  
  
# Compression
compression-worker:
  compressionCommand: /usr/bin/sh
  uncompressionCommand: /usr/bin/sh
  hostname: "hostname"
  fixed-delay-ms: 10
  init-delay-poll-ms: 1000
  tm-proc-one-task-s: 600                 # Timeout in second for stopping task of pool's task execution
  tm-proc-all-tasks-s: 1800               # Timeout in second for stopping task of pool execution
  tm-proc-stop-s: 300                     # Timeout in second for stopping task of pool execution
  tm-proc-check-stop-s: 60                # Timeout in second for stopping the task of waiting for required inputs before starting processing