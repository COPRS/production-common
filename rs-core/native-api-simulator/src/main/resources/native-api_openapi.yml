# Copyright 2023 Airbus
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

openapi: '3.0.2'
info:
  title: RS Native API
  description: The API of the Reference System that can be used to query product data.
  version: "1.0"
servers:
  - url: http://localhost:8080/api/v1
    description: local service URL
tags:
  - name: Metadata
paths:
  /ping:
    get:
      operationId: PingApi
      summary: check whether the API service is reachable and running and retrieve the API version number
      description: A HTTP 200 answer is to be expected when the API service is running and reachable. Additionally the current API version number will be retrieved.
      tags:
        - "Metadata"
      responses:
        "200":
          description: OK - the API service is running and reachable
          content:
            application/json:
              schema:
                type: object
                properties:
                  apiVersion:
                    type: string
                    description: the version of the API
                    example: "1.0"
        "400":
          description: Bad Request - the API service rejects to process the request because of client side errors, for example a malformed request syntax
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400-Response"
        "500":
          description: Internal Server Error - the API service encountered an unexpected condition that prevented it from fulfilling the request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error500-Response"

  /missions:
    get:
      operationId: GetMissions
      summary: retrieve the names of the missions supported by the API
      description: To search for satellite product data the data can be filtered by attributes which depend on the product type which in turn depend on the satellite mission. This endpoint returns all names of the missions supported by the API.
      tags:
        - "Metadata"
      responses:
        "200":
          description: OK - the supperted mission names were returned with this response
          content:
            application/json:
              schema:
                type: object
                properties:
                  missions:
                    type: array
                    items:
                      type: string
                    description: the names of the missions supported by the API
                    example: ["s1", "s2", "s3"]
        "400":
          description: Bad Request - the API service rejects to process the request because of client side errors, for example a malformed request syntax
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400-Response"
        "500":
          description: Internal Server Error - the API service encountered an unexpected condition that prevented it from fulfilling the request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error500-Response"

  /missions/{missionName}/productTypes:
    get:
      operationId: GetProductTypes
      summary: retrieve the names of the product types supported for the given mission
      description: To search for satellite product data the data can be filtered by attributes which depend on the product type which in turn depend on the satellite mission. This endpoint returns all names of the product types supported for the given mission.
      tags:
        - "Metadata"
      parameters:
        - in: path
          name: missionName
          required: true
          schema:
            type: string
            description: the name of the mission
      responses:
        "200":
          description: OK - the product type names for the given mission were returned with this response
          content:
            application/json:
              schema:
                type: object
                properties:
                  productTypes:
                    type: array
                    items:
                      type: string
                    description: the names of the product types for the given mission
                    example: ["l1", "l2", "aux-safe"]
        "400":
          description: Bad Request - the API service rejects to process the request because of client side errors, for example a malformed request syntax
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400-Response"
        "500":
          description: Internal Server Error - the API service encountered an unexpected condition that prevented it from fulfilling the request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error500-Response"

  /missions/{missionName}/productTypes/{productType}/attributes:
    get:
      operationId: GetAttributes
      summary: retrieve the names of the attributes supported for the given mission and product type
      description: To search for satellite product data the data can be filtered by attributes which depend on the product type which in turn depend on the satellite mission. This endpoint returns all attribute names supported for the given mission and product type.
      tags:
        - "Metadata"
      parameters:
        - in: path
          name: missionName
          required: true
          schema:
            type: string
            description: the name of the mission
        - in: path
          name: productType
          required: true
          schema:
            type: string
            description: the name of the product type
      responses:
        "200":
          description: OK - the attribute names for the given mission and product type were returned with this response
          content:
            application/json:
              schema:
                type: object
                properties:
                  attributes:
                    type: array
                    items:
                      type: string
                    description: the attribute names for the given mission and product type
                    example: ["attr_beginningDateTime_date", "attr_orbitDirection_string", "attr_sliceNumber_long"]
        "400":
          description: Bad Request - the API service rejects to process the request because of client side errors, for example a malformed request syntax
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error400-Response"
        "500":
          description: Internal Server Error - the API service encountered an unexpected condition that prevented it from fulfilling the request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error500-Response"

components:
  schemas:
    Error400-Response:
      type: object
      properties:
        timestamp:
          type: string
          description: the date and time the error was caused
          example: "2021-08-10T07:53:40.198+00:00"
        status:
          type: integer
          description: the HTTP status code
          example: 400
        error:
          type: string
          description: the textual representation of the HTTP status code
          example: "Bad Request"
        message:
          type: string
          description: a message that may describe the cause of the response or how to avoid it
          example: "required parameter 'missionName' is missing"
        path:
          type: string
          description: the URL path the request was send to
          example: "/api/v1/missions"
    Error500-Response:
      type: object
      properties:
        timestamp:
          type: string
          description: the date and time the error was caused
          example: "2021-08-10T07:53:40.198+00:00"
        status:
          type: integer
          description: the HTTP status code
          example: 500
        error:
          type: string
          description: the textual representation of the HTTP status code
          example: "Internal Server Error"
        message:
          type: string
          description: a message that may describe the cause of the response or how to avoid it
          example: "database connection error"
        path:
          type: string
          description: the URL path the request was send to
          example: "/api/v1/missions"
