<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>de.werum.s1pdgs</groupId>
	<artifactId>s1pro-core</artifactId>
	<version>3.32.1</version>
	<packaging>pom</packaging>

	<properties>
		<java.version>11</java.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

		<!-- dependency version definitions -->
		<spring.boot.version>2.3.12.RELEASE</spring.boot.version>
		<spring-cloud.version>2020.0.3</spring-cloud.version>

		<kafka.version>2.5.0</kafka.version>

		<commons.logging.version>1.2</commons.logging.version>
		<commons.configuration.version>1.10</commons.configuration.version>
		<commons.net.version>3.8.0</commons.net.version>
		<commons.io.version>2.7</commons.io.version>
		<httpcomponents.version>4.5.1</httpcomponents.version>

		<!-- jacoco.version>0.7.5.201505241946</jacoco.version -->
		<jacoco.version>0.7.7.201606060606</jacoco.version>

		<json.version>20171018</json.version>
		<moxy.version>2.5.0</moxy.version>
		<openapi4j.version>1.0.4</openapi4j.version>
		<equalsverifier.version>3.10</equalsverifier.version>
		<aws.version>1.11.271</aws.version>
		<jsch.version>0.1.55</jsch.version>
		<elasticsearch.version>7.14.0</elasticsearch.version>
		<spatial4j.version>0.7</spatial4j.version>
		<jts.version>1.15.0</jts.version>
		<pmd.failOnViolation>false</pmd.failOnViolation>
		<odata.version>4.8.0</odata.version>
		<log4j.version>2.17.1</log4j.version>
	</properties>

	<!-- TODO: check if this is still required -->
	<repositories>
		<repository>
			<id>in-project</id>
			<name>In Project Repo</name>
			<url>file://${project.basedir}/libs</url>
		</repository>
	</repositories>

	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.8.0</version>
					<configuration>
						<release>11</release> 
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-clean-plugin</artifactId>
					<version>2.5</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.22.0</version>
					<configuration>
						<argLine>
							--illegal-access=permit
						</argLine>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-jar-plugin</artifactId>
					<version>3.2.0</version>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring.boot.version}</version>
					<configuration>
						<excludes>
							<exclude>
								<groupId>org.apache.maven.plugins</groupId>
								<artifactId>maven-surefire-plugin</artifactId>
							</exclude>
						</excludes>
					</configuration>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
							<configuration>
								<mainClass>${start-class}</mainClass>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>findbugs-maven-plugin</artifactId>
					<version>3.0.4</version>
					<configuration>
						<effort>Max</effort>
						<threshold>Low</threshold>
						<maxRank>15</maxRank>
						<includeTests>false</includeTests>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-pmd-plugin</artifactId>
					<version>3.8</version>
					<configuration>
						<rulesets>
							<ruleset>${project.basedir}/../PmdJavaRuleset.xml</ruleset>
						</rulesets>
						<verbose>true</verbose>
						<failurePriority>2</failurePriority>
						<includeTests>false</includeTests>
						<outputDirectory>target/html-reports</outputDirectory>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.jacoco</groupId>
					<artifactId>jacoco-maven-plugin</artifactId>
					<version>${jacoco.version}</version>
					<configuration>
						<systemPropertyVariables>
							<jacoco-agent.destfile>target/jacoco.exec</jacoco-agent.destfile>
						</systemPropertyVariables>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<!-- Import dependency management from Spring Boot -->
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>${spring.boot.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>

			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka-clients</artifactId>
				<version>${kafka.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka-clients</artifactId>
				<version>${kafka.version}</version>
				<classifier>test</classifier>
			</dependency>
			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka_2.11</artifactId>
				<version>${kafka.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka_2.11</artifactId>
				<version>${kafka.version}</version>
				<classifier>test</classifier>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka_2.12</artifactId>
				<version>${kafka.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka_2.12</artifactId>
				<version>${kafka.version}</version>
				<classifier>test</classifier>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka-log4j-appender</artifactId>
				<version>${kafka.version}</version>
			</dependency>
			<!-- Begin of Exploit Mitigation for CVE-2021-45046 -->
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-core</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.logging.log4j</groupId>
				<artifactId>log4j-api</artifactId>
				<version>${log4j.version}</version>
			</dependency>
			<!-- End of Exploit Mitigation for CVE-2021-45046 -->
			<dependency>
				<groupId>commons-logging</groupId>
				<artifactId>commons-logging</artifactId>
				<version>${commons.logging.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-configuration</groupId>
				<artifactId>commons-configuration</artifactId>
				<version>${commons.configuration.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-net</groupId>
				<artifactId>commons-net</artifactId>
				<version>${commons.net.version}</version>
			</dependency>

			<dependency>
				<groupId>commons-io</groupId>
				<artifactId>commons-io</artifactId>
				<version>${commons.io.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.httpcomponents</groupId>
				<artifactId>httpclient</artifactId>
				<version>${httpcomponents.version}</version>
			</dependency>

			<dependency>
				<groupId>com.github.lookfirst</groupId>
				<artifactId>sardine</artifactId>
				<version>5.9</version>
			</dependency>

			<dependency>
				<groupId>com.amazonaws</groupId>
				<artifactId>aws-java-sdk-s3</artifactId>
				<version>${aws.version}</version>
			</dependency>
			<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
				<version>${json.version}</version>
			</dependency>
			<dependency>
				<groupId>com.jcraft</groupId>
				<artifactId>jsch</artifactId>
				<version>${jsch.version}</version>
			</dependency>
			<dependency>
				<groupId>io.fabric8</groupId>
				<artifactId>kubernetes-client</artifactId>
				<version>3.1.10</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>
					</exclusion>
					<exclusion>
						<groupId>ch.qos.logback</groupId>
						<artifactId>logback-classic</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
			<dependency>
				<groupId>io.fabric8</groupId>
				<artifactId>fabric8-arquillian</artifactId>
				<version>2.2.184</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>io.fabric8</groupId>
				<artifactId>kubernetes-assertions</artifactId>
				<version>2.2.184</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.pacesys</groupId>
				<artifactId>openstack4j</artifactId>
				<version>3.1.0</version>
				<classifier>withdeps</classifier>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch.client</groupId>
				<artifactId>elasticsearch-rest-high-level-client</artifactId>
				<version>${elasticsearch.version}</version>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch.client</groupId>
				<artifactId>elasticsearch-rest-client</artifactId>
				<version>${elasticsearch.version}</version>
			</dependency>
			<dependency>
				<groupId>org.elasticsearch</groupId>
				<artifactId>elasticsearch</artifactId>
				<version>${elasticsearch.version}</version>
			</dependency>
			<dependency>
				<groupId>org.locationtech.spatial4j</groupId>
				<artifactId>spatial4j</artifactId>
				<version>${spatial4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.locationtech.jts</groupId>
				<artifactId>jts-core</artifactId>
				<version>${jts.version}</version>
			</dependency>

			<dependency>
				<groupId>org.eclipse.persistence</groupId>
				<artifactId>org.eclipse.persistence.moxy</artifactId>
				<version>${moxy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.openapi4j</groupId>
				<artifactId>openapi-operation-validator</artifactId>
				<version>${openapi4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.openapi4j</groupId>
				<artifactId>openapi-operation-servlet</artifactId>
				<version>${openapi4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.openapi4j</groupId>
				<artifactId>openapi-schema-validator</artifactId>
				<version>${openapi4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.openapi4j</groupId>
				<artifactId>openapi-parser</artifactId>
				<version>${openapi4j.version}</version>
			</dependency>
			<dependency>
				<groupId>org.awaitility</groupId>
				<artifactId>awaitility</artifactId>
				<version>3.1.1</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>nl.jqno.equalsverifier</groupId>
				<artifactId>equalsverifier</artifactId>
				<version>${equalsverifier.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.assertj</groupId>
				<artifactId>assertj-core</artifactId>
				<version>3.13.2</version>
				<scope>test</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<modules>
		<module>applicative-catalog</module>
		<module>archives</module>
		<module>disseminator</module>
		<module>ingestion-trigger</module>
		<module>ingestion-filter</module>
		<module>ingestion-worker</module>
		<module>production-trigger</module>
		<module>ipf-preparation-worker</module>
		<module>ipf-execution-worker</module>
		<module>request-repository</module>
		<module>queue-watcher</module>
		<module>on-demand-interface-provider</module>
		<!-- <module>metadata-catalog-extraction</module> -->
		<module>metadata-catalog-timer</module>
		<module>metadata-catalog-trigger</module>
		<module>metadata-catalog-worker</module>
		<module>mqi-server</module>
		<module>prip-trigger</module>
		<module>prip-worker</module>
		<module>prip-frontend</module>
		<module>ddip-frontend</module>
		<module>native-api</module>
		<module>data-lifecycle-trigger</module>
		<module>data-request-worker</module>
		<module>eviction-management-worker</module>
		<module>validation</module>
		<module>compression-trigger</module>
		<module>compression-worker</module>
		<module>dissemination-trigger</module>
		<module>dissemination-worker</module>
		<module>directory-cleaner</module>
	</modules>

</project>
