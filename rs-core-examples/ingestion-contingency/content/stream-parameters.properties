# Application properties
app.*.spring.kafka.bootstrap-servers=kafka-cluster-kafka-bootstrap.infra.svc.cluster.local:9092
app.*.main.banner-mode=off
app.*.management.endpoint.health.show-details=always
app.*.logging.config=/log/log4j2_debug.yml

# Ingestion Trigger
app.ingestion-contingency-trigger.spring.cloud.stream.function.bindings.newInboxService-out-0=output
app.ingestion-contingency-trigger.spring.cloud.stream.function.definition=newInboxService
app.ingestion-contingency-trigger.application.name=coprs-ingestion-contingency-trigger
app.ingestion-contingency-trigger.process.hostname=${HOSTNAME}
app.ingestion-contingency-trigger.ingestion-trigger.polling-interval-ms=10000
## inbox for S1_AUX
app.ingestion-contingency-trigger.ingestion-trigger.polling.inbox1.directory=ftps://rs-edip-mock-svc:21/S1_AUX/
app.ingestion-contingency-trigger.ingestion-trigger.polling.inbox1.matchRegex=^[0-9a-zA-Z][0-9a-zA-Z][0-9a-zA-Z_]_((OPER|TEST|REPR)_)?(AMH_ERRMAT|AMV_ERRMAT|AUX_CAL|AUX_ICE|AUX_INS|AUX_ITC|AUX_OBMEMC|AUX_POEORB|AUX_PP1|AUX_PP2|AUX_PREORB|AUX_RESORB|AUX_SCF|AUX_SCS|AUX_TEC|AUX_TRO|AUX_WAV|AUX_WND|MPL_ORBPRE|MPL_ORBRES|MPL_ORBSCT|MSK_EW_SLC|MSK__LAND|MSK_OCEAN_|MSK_OVRPAS)_[^/]*\.(xml|XML|EOF|SAFE)$
app.ingestion-contingency-trigger.ingestion-trigger.polling.inbox1.ignoreRegex=(^\\..*|.*\\.tmp$|db.*|^lost\+found$)
app.ingestion-contingency-trigger.ingestion-trigger.polling.inbox1.type=edip
app.ingestion-contingency-trigger.ingestion-trigger.polling.inbox1.family=S1_AUX
app.ingestion-contingency-trigger.ingestion-trigger.polling.inbox1.stationName=SGS_
app.ingestion-contingency-trigger.ingestion-trigger.polling.inbox1.missionId=S1
app.ingestion-contingency-trigger.ingestion-trigger.polling.inbox1.station-retention-time=7
app.ingestion-contingency-trigger.ingestion-trigger.polling.inbox1.ignore-files-before-date=2020-11-24T08:00:00.000Z
## inbox for S3 AUX
app.ingestion-contingency-trigger.ingestion-trigger.polling.inbox2.directory=ftps://rs-edip-mock-svc:21/S3_AUX/
app.ingestion-contingency-trigger.ingestion-trigger.polling.inbox2.matchRegex=^S3[AB_]_([0-9a-zA-Z_]{9})AX_([0-9]{8}T[0-9]{6})_([0-9]{8}T[0-9]{6})_([0-9]{8}T[0-9]{6})_(_{17})_([0-9a-zA-Z_]{3})_(((O|F|R|D|_)_(NR|NT|ST|SN|NS|NN|AL|__)_([a-zA-Z0-9_]{3}))|_{8})\.SEN3$
app.ingestion-contingency-trigger.ingestion-trigger.polling.inbox2.ignoreRegex=(^\\..*|.*\\.tmp$|db.*|^lost\+found$)
app.ingestion-contingency-trigger.ingestion-trigger.polling.inbox2.type=edip
app.ingestion-contingency-trigger.ingestion-trigger.polling.inbox2.family=S3_AUX
app.ingestion-contingency-trigger.ingestion-trigger.polling.inbox2.stationName=SGS_
app.ingestion-contingency-trigger.ingestion-trigger.polling.inbox2.missionId=S3
app.ingestion-contingency-trigger.ingestion-trigger.polling.inbox2.station-retention-time=7
app.ingestion-contingency-trigger.ingestion-trigger.polling.inbox2.ignore-files-before-date=2020-11-24T08:00:00.000Z


## MongoDB
app.ingestion-contingency-trigger.mongodb.host=mongodb-0.mongodb-headless.database.svc.cluster.local
app.ingestion-contingency-trigger.mongodb.port=27017
app.ingestion-contingency-trigger.mongodb.database=coprs
app.ingestion-contingency-trigger.mongodb.username=${MONGO_USERNAME}
app.ingestion-contingency-trigger.mongodb.password=${MONGO_PASSWORD}

## EDIP Client
app.ingestion-contingency-trigger.edip.host-configs.host1.serverName=rs-edip-mock-svc
app.ingestion-contingency-trigger.edip.host-configs.host1.user=${EDIP_USERNAME}
app.ingestion-contingency-trigger.edip.host-configs.host1.pass=${EDIP_PASSWORD}
app.ingestion-contingency-trigger.edip.host-configs.host1.trustSelfSignedCertificate=true
app.ingestion-contingency-trigger.edip.host-configs.host1.encryptDataChannel=false
app.ingestion-contingency-trigger.edip.host-configs.host1.ftpsSslSessionReuse=true
app.ingestion-contingency-trigger.edip.host-configs.host1.useExtendedMasterSecret=false
app.ingestion-contingency-trigger.edip.host-configs.host1.connectTimeoutSec=60
app.ingestion-contingency-trigger.edip.host-configs.host1.pasv=true
app.ingestion-contingency-trigger.edip.host-configs.host1.enableHostnameVerification=false
app.ingestion-contingency-trigger.edip.host-configs.host1.sslProtocol=TLSv1.2
app.ingestion-contingency-trigger.edip.host-configs.host1.explicitFtps=true
#app.ingestion-contingency-trigger.edip.host-configs.host1.keyManagerKeyStore=
app.ingestion-contingency-trigger.edip.host-configs.host1.keyManagerKeyStorePassword=changeit
#app.ingestion-contingency-trigger.edip.host-configs.host1.trustManagerKeyStore=/app/ssl/truststore.jks
app.ingestion-contingency-trigger.edip.host-configs.host1.trustManagerKeyStorePassword=changeit

# Ingestion Worker
app.ingestion-contingency-worker.spring.cloud.stream.function.bindings.ingest-in-0=input
app.ingestion-contingency-worker.spring.cloud.stream.function.bindings.ingest-out-0=output
app.ingestion-contingency-worker.spring.cloud.stream.function.definition=ingest
app.ingestion-contingency-worker.application.name=coprs-ingestion-contingency-worker
app.ingestion-contingency-worker.process.hostname=mock-auxip-ingestion-worker-0
app.ingestion-contingency-worker.ingestion-worker.hostname=${HOSTNAME}
app.ingestion-contingency-worker.ingestion-worker.polling-interval-ms=10000
app.ingestion-contingency-worker.ingestion-worker.max-retries=10
app.ingestion-contingency-worker.ingestion-worker.tempo-retry-ms=10000
app.ingestion-contingency-worker.ingestion-worker.buffer-inputs=false

app.ingestion-contingency-worker.edip.host-configs.host1.serverName=rs-edip-mock-svc
app.ingestion-contingency-worker.edip.host-configs.host1.user=${EDIP_USERNAME}
app.ingestion-contingency-worker.edip.host-configs.host1.pass=${EDIP_PASSWORD}
app.ingestion-contingency-worker.edip.host-configs.host1.trustSelfSignedCertificate=true
app.ingestion-contingency-worker.edip.host-configs.host1.encryptDataChannel=false
app.ingestion-contingency-worker.edip.host-configs.host1.ftpsSslSessionReuse=true
app.ingestion-contingency-worker.edip.host-configs.host1.useExtendedMasterSecret=false
app.ingestion-contingency-worker.edip.host-configs.host1.connectTimeoutSec=60
app.ingestion-contingency-worker.edip.host-configs.host1.pasv=true
app.ingestion-contingency-worker.edip.host-configs.host1.enableHostnameVerification=false
app.ingestion-contingency-worker.edip.host-configs.host1.sslProtocol=TLSv1.2
app.ingestion-contingency-worker.edip.host-configs.host1.explicitFtps=true
#app.ingestion-contingency-worker.edip.host-configs.host1.keyManagerKeyStore=test
app.ingestion-contingency-worker.edip.host-configs.host1.keyManagerKeyStorePassword=changeit
#app.ingestion-contingency-worker.edip.host-configs.host1.trustManagerKeyStore=/app/ssl/truststore.jks
app.ingestion-contingency-worker.edip.host-configs.host1.trustManagerKeyStorePassword=changeit


# Deployer properties
deployer.*.kubernetes.imagePullPolicy=Always
deployer.*.kubernetes.imagePullSecrets=spring-cloud-dataflow-registry-dockersecret

deployer.ingestion-contingency-trigger.environmentVariables=JAVA_TOOL_OPTIONS=-Xmx1024m
deployer.ingestion-contingency-trigger.kubernetes.requests.memory=477Mi
deployer.ingestion-contingency-trigger.kubernetes.requests.cpu=500m
deployer.ingestion-contingency-trigger.kubernetes.limits.memory=1907Mi
deployer.ingestion-contingency-trigger.kubernetes.limits.cpu=2200m
deployer.ingestion-contingency-trigger.kubernetes.secretKeyRefs=[{ envVarName: 'EDIP_USERNAME', secretName: 'mock', dataKey: 'USERNAME' },{ envVarName: 'EDIP_PASSWORD', secretName: 'mock', dataKey: 'PASSWORD' },{envVarName: 'AUXIP_CLIENT_ID', secretName: 'auxip', dataKey: 'CLIENT_ID' },{envVarName: 'AUXIP_CLIENT_SECRET', secretName: 'auxip', dataKey: 'CLIENT_SECRET' },{ envVarName: 'MONGO_USERNAME', secretName: 'mongoingestion', dataKey: 'USERNAME' },{ envVarName: 'MONGO_PASSWORD', secretName: 'mongoingestion', dataKey: 'PASSWORD' }]

deployer.ingestion-contingency-worker.count=1
deployer.ingestion-contingency-worker.environmentVariables=JAVA_TOOL_OPTIONS=-Xmx512m
deployer.ingestion-contingency-worker.kubernetes.requests.memory=3500Mi
deployer.ingestion-contingency-worker.kubernetes.requests.cpu=300m
deployer.ingestion-contingency-worker.kubernetes.limits.memory=4000Mi
deployer.ingestion-contingency-worker.kubernetes.limits.cpu=1300m
deployer.ingestion-contingency-worker.kubernetes.secretKeyRefs=[{ envVarName: 'OBS_USERNAME', secretName: 'obs', dataKey: 'USER_ID' },{ envVarName: 'OBS_PASSWORD', secretName: 'obs', dataKey: 'USER_SECRET' },{ envVarName: 'EDIP_USERNAME', secretName: 'mock', dataKey: 'USERNAME' },{ envVarName: 'EDIP_PASSWORD', secretName: 'mock', dataKey: 'PASSWORD' },{envVarName: 'AUXIP_CLIENT_ID', secretName: 'auxip', dataKey: 'CLIENT_ID' },{envVarName: 'AUXIP_CLIENT_SECRET', secretName: 'auxip', dataKey: 'CLIENT_SECRET' }]
deployer.ingestion-contingency-worker.kubernetes.volumeMounts=[{ name: 's3-upload-cache', mountPath: '/opt/s3/uploadCache'}]
deployer.ingestion-contingency-worker.kubernetes.volumes=[{ name: 's3-upload-cache', emptyDir: { medium: 'Memory', sizeLimit: '1500Mi' }}]