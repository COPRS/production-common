# Application properties
app.*.spring.kafka.bootstrap-servers=kafka-headless:9092
app.*.main.banner-mode=off
app.*.management.endpoint.health.show-details=always
app.*.logging.config=/log/log4j2_debug.yml

# Ingestion Trigger

app.ingestion-edip-trigger.spring.cloud.stream.function.bindings.newInboxService-out-0=output
app.ingestion-edip-trigger.spring.cloud.stream.function.definition=newInboxService
app.ingestion-edip-trigger.application.name=coprs-ingestion-edip-pedc-trigger
app.ingestion-edip-trigger.process.hostname=${HOSTNAME}
app.ingestion-edip-trigger.ingestion-trigger.polling-interval-ms=10000
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.directory=ftps://rs-edip-mock-svc:21/NOMINAL/
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.matchRegex=^([A-Za-z_]{4}/)?([0-9A-Za-z_]{1})1([0-9A-Za-z_]{1})/([0-9A-Za-z_]+)/(ch[0|_]?[1-2]/)?(DCS_[0-9]{2}_([a-zA-Z0-9_]*)_ch([12])_(DSDB|DSIB).*\\.(raw|aisp|xml|RAW|AISP|XML))$
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.ignoreRegex=(^\\..*|.*\\.tmp$|db.*|^lost\+found$)
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.type=edip
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.family=EDRS_SESSION
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.stationName=MTI_
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.missionId=S1
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.station-retention-time=7
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox1.ignore-files-before-date=2020-11-24T08:00:00.000Z

## inbox for S2_L0_DS
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox2.directory=ftps://rs-edip-mock-svc:21/S2_L0_DS/
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox2.matchRegex=^(S2)(A|B|_)_([A-Z0-9]{4})_(MSI_L0__DS)_\\w{4}_(\\d{8}T\\d{6})(.*)$
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox2.ignoreRegex=(^\\..*|.*\\.tmp$|db.*|^lost\+found$)
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox2.type=edip
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox2.ftpDirectoryListing=true
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox2.family=S2_L0_DS
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox2.stationName=SGS_
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox2.missionId=S2
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox2.station-retention-time=7
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox2.ignore-files-before-date=2020-11-24T08:00:00.000Z

## inbox for S2_L0_GR
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox3.directory=ftps://rs-edip-mock-svc:21/S2_L0_GR/
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox3.matchRegex=^(S2)(A|B|_)_([A-Z0-9]{4})_(MSI_L0__GR)_\\w{4}_(\\d{8}T\\d{6})(.*)$
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox3.ignoreRegex=(^\\..*|.*\\.tmp$|db.*|^lost\+found$)
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox3.type=edip
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox3.ftpDirectoryListing=true
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox3.family=S2_L0_GR
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox3.stationName=SGS_
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox3.missionId=S2
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox3.station-retention-time=7
app.ingestion-edip-trigger.ingestion-trigger.polling.inbox3.ignore-files-before-date=2020-11-24T08:00:00.000Z

## MongoDB
app.ingestion-edip-trigger.mongodb.host=mongodb.processing.svc.cluster.local
app.ingestion-edip-trigger.mongodb.port=27017
app.ingestion-edip-trigger.mongodb.database=coprs
app.ingestion-edip-trigger.mongodb.username=${MONGO_USERNAME}
app.ingestion-edip-trigger.mongodb.password=${MONGO_PASSWORD}

## EDIP Client
app.ingestion-edip-trigger.edip.host-configs.host1.serverName=rs-edip-mock-svc
app.ingestion-edip-trigger.edip.host-configs.host1.user=${EDIP_USERNAME}
app.ingestion-edip-trigger.edip.host-configs.host1.pass=${EDIP_PASSWORD}
app.ingestion-edip-trigger.edip.host-configs.host1.trustSelfSignedCertificate=true
app.ingestion-edip-trigger.edip.host-configs.host1.encryptDataChannel=false
app.ingestion-edip-trigger.edip.host-configs.host1.ftpsSslSessionReuse=true
app.ingestion-edip-trigger.edip.host-configs.host1.useExtendedMasterSecret=false
app.ingestion-edip-trigger.edip.host-configs.host1.connectTimeoutSec=60
app.ingestion-edip-trigger.edip.host-configs.host1.pasv=true
app.ingestion-edip-trigger.edip.host-configs.host1.enableHostnameVerification=false
app.ingestion-edip-trigger.edip.host-configs.host1.sslProtocol=TLSv1.2
app.ingestion-edip-trigger.edip.host-configs.host1.explicitFtps=true
#app.ingestion-edip-trigger.edip.host-configs.host1.keyManagerKeyStore=
app.ingestion-edip-trigger.edip.host-configs.host1.keyManagerKeyStorePassword=changeit
#app.ingestion-edip-trigger.edip.host-configs.host1.trustManagerKeyStore=/app/ssl/truststore.jks
app.ingestion-edip-trigger.edip.host-configs.host1.trustManagerKeyStorePassword=changeit

# Ingestion Filter
app.ingestion-edip-filter.spring.cloud.stream.kafka.binder.autoAddPartitions=true
app.ingestion-edip-filter.spring.cloud.stream.kafka.binder.minPartitionCount=4

app.ingestion-edip-filter.spring.cloud.stream.function.bindings.filter-in-0=input
app.ingestion-edip-filter.spring.cloud.stream.function.bindings.filter-out-0=output
app.ingestion-edip-filter.spring.cloud.stream.function.definition=filter
app.ingestion-edip-filter.application.name=coprs-ingestion-edip-filter
app.ingestion-edip-filter.process.hostname=edip-ingestion-filter-0
app.ingestion-edip-filter.ingestion-filter.polling-interval-ms=100
#app.ingestion-edip-filter.ingestion-filter.config.S1.cron-definition=* * 0-5 ? * MON *
app.ingestion-edip-filter.ingestion-filter.config.S2.cron-definition=* * * ? * * *
app.ingestion-edip-filter.ingestion-filter.config.S3.cron-definition=* * 0-8 ? * WED *

# Ingestion Worker
app.ingestion-edip-worker.spring.cloud.stream.function.bindings.ingest-in-0=input
app.ingestion-edip-worker.spring.cloud.stream.function.bindings.ingest-out-0=output
app.ingestion-edip-worker.spring.cloud.stream.function.definition=ingest
app.ingestion-edip-worker.application.name=coprs-ingestion-edip-pedc-worker
app.ingestion-edip-worker.process.hostname=edip-pedc-ingestion-worker-0
app.ingestion-edip-worker.ingestion-worker.hostname=${HOSTNAME}
app.ingestion-edip-worker.ingestion-worker.polling-interval-ms=10000
app.ingestion-edip-worker.ingestion-worker.max-retries=10
app.ingestion-edip-worker.ingestion-worker.tempo-retry-ms=10000
app.ingestion-edip-worker.ingestion-worker.buffer-inputs=false
app.ingestion-edip-worker.edip.host-configs.host1.serverName=rs-edip-mock-svc
app.ingestion-edip-worker.edip.host-configs.host1.user=${EDIP_USERNAME}
app.ingestion-edip-worker.edip.host-configs.host1.pass=${EDIP_PASSWORD}
app.ingestion-edip-worker.edip.host-configs.host1.trustSelfSignedCertificate=true
app.ingestion-edip-worker.edip.host-configs.host1.encryptDataChannel=false
app.ingestion-edip-worker.edip.host-configs.host1.ftpsSslSessionReuse=true
app.ingestion-edip-worker.edip.host-configs.host1.useExtendedMasterSecret=false
app.ingestion-edip-worker.edip.host-configs.host1.connectTimeoutSec=60
app.ingestion-edip-worker.edip.host-configs.host1.pasv=true
app.ingestion-edip-worker.edip.host-configs.host1.enableHostnameVerification=false
app.ingestion-edip-worker.edip.host-configs.host1.sslProtocol=TLSv1.2
app.ingestion-edip-worker.edip.host-configs.host1.explicitFtps=true
#app.ingestion-edip-worker.edip.host-configs.host1.keyManagerKeyStore=test
app.ingestion-edip-worker.edip.host-configs.host1.keyManagerKeyStorePassword=changeit
#app.ingestion-edip-worker.edip.host-configs.host1.trustManagerKeyStore=/app/ssl/truststore.jks
app.ingestion-edip-worker.edip.host-configs.host1.trustManagerKeyStorePassword=changeit


# Deployer properties
deployer.*.kubernetes.imagePullPolicy=Always
deployer.*.kubernetes.imagePullSecrets=artifactory

deployer.ingestion-edip-trigger.kubernetes.requests.memory=477Mi
deployer.ingestion-edip-trigger.kubernetes.requests.cpu=500m
deployer.ingestion-edip-trigger.kubernetes.limits.memory=1907Mi
deployer.ingestion-edip-trigger.kubernetes.limits.cpu=2200m
deployer.ingestion-edip-trigger.kubernetes.secretKeyRefs=[{ envVarName: 'EDIP_USERNAME', secretName: 'mock', dataKey: 'USERNAME' },{ envVarName: 'EDIP_PASSWORD', secretName: 'mock', dataKey: 'PASSWORD' },{ envVarName: 'MONGO_USERNAME', secretName: 'mongoingestion', dataKey: 'USERNAME' },{ envVarName: 'MONGO_PASSWORD', secretName: 'mongoingestion', dataKey: 'PASSWORD' }]

deployer.ingestion-edip-filter.kubernetes.requests.memory=3500Mi
deployer.ingestion-edip-filter.kubernetes.requests.cpu=300m
deployer.ingestion-edip-filter.kubernetes.limits.memory=4000Mi
deployer.ingestion-edip-filter.kubernetes.limits.cpu=1500m

deployer.ingestion-edip-worker.count=1
deployer.ingestion-edip-worker.kubernetes.requests.memory=3500Mi
deployer.ingestion-edip-worker.kubernetes.requests.cpu=300m
deployer.ingestion-edip-worker.kubernetes.limits.memory=4000Mi
deployer.ingestion-edip-worker.kubernetes.limits.cpu=1300m
deployer.ingestion-edip-worker.kubernetes.secretKeyRefs=[{ envVarName: 'OBS_USERNAME', secretName: 'obs', dataKey: 'USER_ID' },{ envVarName: 'OBS_PASSWORD', secretName: 'obs', dataKey: 'USER_SECRET' },{ envVarName: 'EDIP_USERNAME', secretName: 'mock', dataKey: 'USERNAME' },{ envVarName: 'EDIP_PASSWORD', secretName: 'mock', dataKey: 'PASSWORD' }]
deployer.ingestion-edip-worker.kubernetes.volumeMounts=[{ name: 's3-upload-cache', mountPath: '/opt/s3/uploadCache'}]
deployer.ingestion-edip-worker.kubernetes.volumes=[{ name: 's3-upload-cache', emptyDir: { medium: 'Memory', sizeLimit: '1500Mi' }}]
