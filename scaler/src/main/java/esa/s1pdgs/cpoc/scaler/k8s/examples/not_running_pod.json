curl http://localhost:8080/api/v1/namespaces/default/pods/l1-wrapper-0
{
  "kind": "Pod",
  "apiVersion": "v1",
  "metadata": {
    "name": "l1-wrapper-0",
    "generateName": "l1-wrapper-",
    "namespace": "default",
    "selfLink": "/api/v1/namespaces/default/pods/l1-wrapper-0",
    "uid": "26453449-37ea-11e8-b605-fa163eaeaa5e",
    "resourceVersion": "6280297",
    "creationTimestamp": "2018-04-04T09:25:43Z",
    "labels": {
      "controller-revision-hash": "l1-wrapper-949f96c9b",
      "app": "l1-wrapper"
    },
    "annotations": {
      "kubernetes.io/created-by": "{\"kind\":\"SerializedReference\",\"apiVersion\":\"v1\",\"reference\":{\"kind\":\"StatefulSet\",\"namespace\":\"default\",\"name\":\"l1-wrapper\",\"uid\":\"c2ee3a30-3721-11e8-b605-fa163eaeaa5e\",\"apiVersion\":\"apps/v1beta1\",\"resourceVersion\":\"6179095\"}}\n"
    },
    "ownerReferences": [
      {
        "apiVersion": "apps/v1beta1",
        "kind": "StatefulSet",
        "name": "l1-wrapper",
        "uid": "c2ee3a30-3721-11e8-b605-fa163eaeaa5e",
        "controller": true,
        "blockOwnerDeletion": true
      }
    ]
  },
  "spec": {
    "volumes": [
      {
        "name": "fastdatadir",
        "persistentVolumeClaim": {
          "claimName": "fastdatadir-l1-wrapper-0"
        }
      },
      {
        "name": "default-token-rf94g",
        "secret": {
          "secretName": "default-token-rf94g",
          "defaultMode": 420
        }
      }
    ],
    "containers": [
      {
        "name": "l1-wrapper",
        "image": "registry.geohub.space/wo7/l0_wrapper/l1:poc-1.2.2",
        "envFrom": [
          {
            "configMapRef": {
              "name": "s1pdgs-config"
            }
          },
          {
            "configMapRef": {
              "name": "l1-wrapper-config"
            }
          }
        ],
        "resources": {
          "requests": {
            "cpu": "7"
          }
        },
        "volumeMounts": [
          {
            "name": "fastdatadir",
            "mountPath": "/data/localWD/"
          },
          {
            "name": "default-token-rf94g",
            "readOnly": true,
            "mountPath": "/var/run/secrets/kubernetes.io/serviceaccount"
          }
        ],
        "terminationMessagePath": "/dev/termination-log",
        "terminationMessagePolicy": "File",
        "imagePullPolicy": "IfNotPresent",
        "securityContext": {
          "privileged": true
        }
      }
    ],
    "restartPolicy": "Always",
    "terminationGracePeriodSeconds": 30,
    "dnsPolicy": "ClusterFirst",
    "serviceAccountName": "default",
    "serviceAccount": "default",
    "securityContext": {

    },
    "imagePullSecrets": [
      {
        "name": "regsecret"
      }
    ],
    "hostname": "l1-wrapper-0",
    "subdomain": "l1-wrapper-svc",
    "affinity": {
      "nodeAffinity": {
        "requiredDuringSchedulingIgnoredDuringExecution": {
          "nodeSelectorTerms": [
            {
              "matchExpressions": [
                {
                  "key": "wrapperconfig",
                  "operator": "In",
                  "values": [
                    "l1"
                  ]
                }
              ]
            }
          ]
        }
      }
    },
    "schedulerName": "default-scheduler",
    "tolerations": [
      {
        "key": "node.alpha.kubernetes.io/notReady",
        "operator": "Exists",
        "effect": "NoExecute",
        "tolerationSeconds": 300
      },
      {
        "key": "node.alpha.kubernetes.io/unreachable",
        "operator": "Exists",
        "effect": "NoExecute",
        "tolerationSeconds": 300
      }
    ]
  },
  "status": {
    "phase": "Pending",
    "conditions": [
      {
        "type": "PodScheduled",
        "status": "False",
        "lastProbeTime": null,
        "lastTransitionTime": "2018-04-04T09:25:43Z",
        "reason": "Unschedulable",
        "message": "No nodes are available that match all of the predicates: Insufficient cpu (5), MatchNodeSelector (6), PodToleratesNodeTaints (1)."
      }
    ],
    "qosClass": "Burstable"
  }
}